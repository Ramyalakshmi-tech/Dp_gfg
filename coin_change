https://www.geeksforgeeks.org/problems/coin-change2448/1


class Solution {
    public int count(int coins[], int sum) {
        int[][] dp = new int[sum + 1][coins.length+1];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
       // coinRecur(coins,sum,coin,0,0);
        return coinMemo(coins, sum, 0, dp);
       // return coinTab(coins,sum);
    }
 
    public int coinMemo(int[] coins, int sum, int ind, int[][] dp) {
        if (sum == 0) return 1;  // Found one valid way
        if (sum < 0 || ind >= coins.length) return 0; // No valid way

        if (dp[sum][ind] != -1) return dp[sum][ind]; // Memoized result

        // Two choices:
        int include = coinRecur(coins, sum - coins[ind], ind, dp);  // Use this coin (again)
        int exclude = coinRecur(coins, sum, ind + 1, dp);  // Skip this coin

        return dp[sum][ind] = include + exclude;  // Store and return result
    }
    
    public void coinRecur(int[] coins,int sum,int[] nums,int currSum,int ind){
        if(currSum==sum){
            nums[0]++;
            return;
        }
        if(ind>=coins.length || currSum>sum) return;
        for(int i=ind;i<coins.length;i++){
            coinRecur(coins,sum,nums,currSum+coins[i],i);
        }
    }

}
