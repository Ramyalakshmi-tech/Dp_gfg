https://www.geeksforgeeks.org/problems/geek-jump/1

class Solution {
    int minCostMemo(int[] height) {
        int[] dp=new int[height.length+1];
        for(int i=0;i<dp.length;i++)
            dp[i]=-1;
        return minCostMemo(height,0,dp);
      //  return minCostRecur(height, 0);
    }

    int minCostRecur(int[] height, int i) {
        if (i == height.length - 1) return 0;

        int oneStep = minCostRecur(height, i + 1) + Math.abs(height[i] - height[i + 1]);
        int twoStep = Integer.MAX_VALUE;
        if (i + 2 < height.length) {
            twoStep = minCostRecur(height, i + 2) + Math.abs(height[i] - height[i + 2]);
        }

        return Math.min(oneStep, twoStep);
    }
     int minCostMemo(int[] height, int i,int[] dp) {
        if (i == height.length - 1) return 0;
        if(dp[i]!=-1) return dp[i];
        int oneStep = minCostMemo(height, i + 1,dp) + Math.abs(height[i] - height[i + 1]);
        int twoStep = Integer.MAX_VALUE;
        if (i + 2 < height.length) {
            twoStep = minCostMemo(height, i + 2,dp) + Math.abs(height[i] - height[i + 2]);
        }

        return dp[i]=Math.min(oneStep, twoStep);
    }
    
    int minCostTab(int[] height){
        int[] dp=new int[height.length];
        dp[0]=0;
        if (height.length > 1)
            dp[1]=Math.abs(height[0]-height[1]);
        for(int i=2;i<dp.length;i++){
            int val1=dp[i-1]+Math.abs(height[i]-height[i-1]);
            int val2=dp[i-2]+Math.abs(height[i]-height[i-2]);
            dp[i]=Math.min(val1,val2);
        }
            return dp[height.length-1];
    }
    
    int minCostSpaceCom(int[] height){
        int prev1=0;
        int prev2=prev1;
        if (height.length > 1)
             prev2=Math.abs(height[0]-height[1]);
        
        for(int i=2;i<height.length;i++){
             int val1=prev2+Math.abs(height[i]-height[i-1]);
            int val2=prev1+Math.abs(height[i]-height[i-2]);
            int curr=Math.min(val1,val2);
           
            prev1=prev2;
             prev2=curr;
            
        }
        
        return prev2;
        
    }
}
